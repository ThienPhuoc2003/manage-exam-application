
datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(auto()) @map("_id") @db.ObjectId
  userId             String  @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.String
  access_token       String? @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model User {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?  @unique
  emailVerified DateTime?
  image         String?
  hashedPassword String?
  createdAt     DateTime @default(now())
  updateAt      DateTime @updatedAt
  role          String?
  accounts      Account[]
  examsSent     Exam[]    @relation("SentExams")
  examsReceived Exam[]    @relation("ReceivedExams")
}

model Exam {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  fileId        String   // URL hoặc ID của tệp được tải lên
  description   String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  // Liên kết với người gửi (sender) và người nhận (recipient)
  sender        User     @relation("SentExams", fields: [senderId], references: [id])
  senderId      String
  recipient     User     @relation("ReceivedExams", fields: [recipientId], references: [id])
  recipientId   String
}

type Image {
  color     String
  colorCode String
  image     String
}
